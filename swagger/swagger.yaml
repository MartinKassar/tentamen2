openapi: "3.0.0"
info:
  version: 1.0.0
  title: Bargain Books
  description: Books available for loan
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  contact:
    name: Martin Kassar
    email: martin.kassar@hotmail.com
servers:
- url: http://localhost:3000
paths:
  /books:
    get:
      summary: Get all available books
      operationId: listBooks
      tags:
      - books
      parameters:
      - name: title
        in: query
        description: get the title of book
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Array of books
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new book listing
      operationId: createBookListing
      tags:
      - books
      requestBody:
        description: list a book
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: book listed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBook"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /books/{id}:
    get:
      summary: get an ID of book listing
      operationId: getBookId
      tags:
      - books
      parameters:
      - name: id
        in: path
        description: bookId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Returned the book with Id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Edit a book
      operationId: editBookListing
      tags:
      - books
      parameters:
      - name: id
        in: path
        description: Book listing id
        required: true
        schema:
          type: string
      requestBody:
        description: The edited book listing
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Edited book listing
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a book listing
      operationId: deleteBookListing
      tags:
      - books
      parameters:
      - name: id
        in: path
        description: bookListingId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Book listing deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBook"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Book:
      type: object
      properties:
        location:
          type: object
          properties:
            city:
              type: string
            street:
              type: string
        isbn:
          type: string
        title:
          type: string
        author:
          type: string
        price:
          type: number
        sellerEmail:
          type: string
        used:
          type: boolean
    ResponseBook:
      allOf:
      - $ref: "#/components/schemas/Book"
      - properties:
          __v:
            type: integer
            format: uint32
          _id:
            type: string
            format: uuid
    ResponseBooks: 
      type: array
      items:
        $ref: "#/components/schemas/ResponseBook"
   
    Error:
      required:
        - error
      properties:
        error:
          type: object
          properties:
            expose:
              type: boolean
            statusCode:
              type: integer
              format: uint32
            status:
              type: integer
              format: uint32
            body:
              title: body as escaped json
              type: string
            type:
              title: fault desciption
              type: string